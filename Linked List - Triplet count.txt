#include <iostream> 
using namespace std;
struct Node {
	int data;
	Node* next, * prev;
};
int countPairs(Node* head1, Node* head2, Node* head3, int x)
{
	int count = 0;
	Node* p1, * p2, * p3;
	for (p1 = head1; p1 != NULL; p1 = p1->next)
	{
		for (p2 = head2; p2 != NULL; p2 = p2->next)
		{
			for (p3 = head3; p3 != NULL; p3 = p3->next)
			{
				if ((p1->data * p2->data * p3->data) == x)
				{
					cout << endl << p1->data << " * " << p2->data << " * " << p3->data << " * " <<" = "<<x<< endl;
					count++;
				}
			}
		}
	}
	return count;
}
void create_node(Node** head, int data)
{
	Node* temp = new Node();
	temp->data = data;
	temp->next = temp->prev = NULL;
	if ((*head) == NULL)
		(*head) = temp;
	else {
		temp->next = *head;
		(*head)->prev = temp;
		(*head) = temp;
	}
}
void print(Node* head)
{
	Node* temp = head;
	while (head)
	{
		cout << head->data << " ";
		temp = head;
		head = head->next;
	}
}
void swap(int* A, int* B)
{
	int temp = *A;
	*A = *B;
	*B = temp;
}
int main()
{
	int x = 30;
	Node* head = NULL;
	Node* head1 = NULL;
	Node* head2 = NULL;
	create_node(&head, 3);
	create_node(&head, 1);
	create_node(&head, 5);
	create_node(&head, 7);
	create_node(&head1, 8);
	create_node(&head1, 2);
	create_node(&head1, 13);
	create_node(&head1, 12);
	create_node(&head2, 15);
	create_node(&head2, 2);
	create_node(&head2, 0);
	create_node(&head2, 1);
	cout << "Self defined given value : " << x << endl;
	cout << "Elements of linked list : ";
	print(head);
	print(head1);
	print(head2);
	cout << endl << "Triplet Count = " << countPairs(head, head1, head2, x) << endl;
	system("
